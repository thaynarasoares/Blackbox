Integração com Telegram Utilizando Tópico

1 - Criação do Grupo e Tópico 

1.1 - Dentro do grupo, você deve acessar a opção de tópicos e selecionar "Criar novo tópico

1.2 - Adicionar o Bot no Grupo 

1.3 - Pegar o Chat ID do Tópico



2 - Criar o arquivo de envio no cd /var/ossec/integrations/


OBS: Exemplo de arquivo utilizando dados do Office365

nano custom-telegram9.py

#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import json

try:
    import requests
except Exception:
    print("No module 'requests' found. Install: pip3 install requests")
    sys.exit(1)

CHAT_ID = "ADICIONAR O CHAT ID"
message_thread_id = "ADICIONAR O ID DO TÓPICO"


def create_message(alert_json):
    # Get alert information
    title = alert_json['rule']['description'] if 'description' in alert_json['rule'] else ''
    alert_level = alert_json['rule']['level'] if 'level' in alert_json['rule'] else ''
    groups = ', '.join(alert_json['rule']['groups']) if 'groups' in alert_json['rule'] else ''
    rule_id = alert_json['rule']['id'] if 'rule' in alert_json else ''
    user_id = alert_json['data']['office365']['UserId'] if 'UserId' in alert_json['data']['office365'] else  ''
    time = alert_json.get('timestamp', 'Timestamp não disponível')
    client_ip = alert_json['data']['office365']['ClientIP'] if 'ClientIP' in alert_json['data']['office365'] else  ''
    object_id = alert_json['data']['office365']['ObjectId'] if 'ObjectId' in alert_json['data']['office365'] else  ''
    operation = alert_json['data']['office365']['Operation'] if 'Operation' in alert_json['data']['office365'] else  ''
    site_url = alert_json['data']['office365']['SiteUrl'] if 'SiteUrl' in alert_json['data']['office365'] else  ''
    file_name = alert_json['data']['office365']['SourceFileName'] if 'SourceFileName' in alert_json['data']['office365'] else  ''
    relative_url = alert_json['data']['office365']['SourceRelativeUrl'] if 'SourceRelativeUrl' in alert_json['data']['office365'] else  ''

    # Format message with markdown
    msg_content = f'*{title}*\n\n'
    msg_content += f'*GROUPS:* {groups}\n' if len(groups) > 0 else ''
    msg_content += f'*RULE:* {rule_id} (Level {alert_level})\n'
    msg_content += f'*USER ID:* {user_id}\n'
    msg_content += f'*TIME:* {time}\n'
    msg_content += f'*OPERATION:* {operation}\n'
    msg_content += f'*CLIENT IP:* {client_ip}\n\n'
    msg_content += f'*OBJECT ID:* {object_id}\n\n'
    msg_content += f'*URL:* {site_url}\n\n'
    msg_content += f'*SOURCE FILE NAME:* {file_name}\n\n'
    msg_content += f'*SOURCE RELATIVE URL:* {relative_url}\n\n'
    msg_content += "*ALERTA: EXCLUSÃO EM MASSA DE ARQUIVOS NO SHAREPOINT*\n\n"

    msg_data = {}
    msg_data['chat_id'] = CHAT_ID
    msg_data['message_thread_id'] = message_thread_id
    msg_data['text'] = msg_content
    msg_data['parse_mode'] = 'markdown'


    return json.dumps(msg_data)


# Read configuration parameters
alert_file = open(sys.argv[1])
hook_url = sys.argv[3]

# Read the alert file
alert_json = json.loads(alert_file.read())
alert_file.close()

# Send the request
msg_data = create_message(alert_json)
headers = {'content-type': 'application/json', 'Accept-Charset': 'UTF-8'}
response = requests.post(hook_url, headers=headers, data=msg_data)

sys.exit(0)


2.1 - Adicionar o arquivo 

custom-telegram9

#!/bin/sh

WPYTHON_BIN="framework/python/bin/python3"

SCRIPT_PATH_NAME="$0"

DIR_NAME="$(cd $(dirname ${SCRIPT_PATH_NAME}); pwd -P)"
SCRIPT_NAME="$(basename ${SCRIPT_PATH_NAME})"

case ${DIR_NAME} in
    */active-response/bin | */wodles*)
        if [ -z "${WAZUH_PATH}" ]; then
            WAZUH_PATH="$(cd ${DIR_NAME}/../..; pwd)"
        fi

        PYTHON_SCRIPT="${DIR_NAME}/${SCRIPT_NAME}.py"
    ;;
    */bin)
        if [ -z "${WAZUH_PATH}" ]; then
            WAZUH_PATH="$(cd ${DIR_NAME}/..; pwd)"
        fi

        PYTHON_SCRIPT="${WAZUH_PATH}/framework/scripts/${SCRIPT_NAME}.py"
    ;;
     */integrations)
        if [ -z "${WAZUH_PATH}" ]; then
            WAZUH_PATH="$(cd ${DIR_NAME}/..; pwd)"
        fi

        PYTHON_SCRIPT="${DIR_NAME}/${SCRIPT_NAME}.py"
    ;;
esac


${WAZUH_PATH}/${WPYTHON_BIN} ${PYTHON_SCRIPT} "$@"


3 - Configuração do OSSEC


  <!-- Integração com Telegram  -->
  <integration>
    <name>NOME-DO-ARQUIVO</name>
    <hook_url>https://api.telegram.org/API-DO-BOT/sendMessage?chat_id=-ID-DO-CHAT&amp;message_thread_id=ID-DO-TÓPICO</hook_url>
    <rule_id>ADICIONAR REGRA OU NIVEL DA REGRA</rule_id>
    <alert_format>json</alert_format>
  </integration


